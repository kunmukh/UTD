# Name: Kunal Mukherjee
# Personal email: kunmukh@GMAIL.COM
# Date: 12/20/20
# File name: 
# Project name: splitbrain

# import
import datetime
from datetime import datetime
import time
import pycurl
import json
from os import listdir
from os.path import isfile, join
import subprocess
import os

# download malware command
# base commands
'''
curl -v --location --output sample.bin \
  --url 'https://www.virustotal.com/vtapi/v2/file/download?apikey=cc4f0dd6e11be4c49f27c7947fc6536b05873a1d2f0b92f8d7075167072847cf&hash=fdc9110458d2d88900171f8fb51b84254fed821a23f268eac73d3cdda38ed9d6
'''

# string constants for malware download
base_url = 'https://www.virustotal.com/vtapi/v2/file/download?'
key_str = 'apikey='
kunal_key = 'cc4f0dd6e11be4c49f27c7947fc6536b05873a1d2f0b92f8d7075167072847cf'
hash_str = '&hash='

# downlaod similar file command
# base commands
'''
    curl --request GET \
  --url https://www.virustotal.com/api/v3/files/9990527d78700a55d788bd4b3fcbb16b3852027ea722540a00d43544df378053/similar_files \
  --header 'x-apikey: cc4f0dd6e11be4c49f27c7947fc6536b05873a1d2f0b92f8d7075167072847cf' | json_pp > sample.json
'''

# string constants for similar malware json download
base_url_simi = 'https://www.virustotal.com/api/v3/files/'
similar_str = '/similar_files'
similar_header = ['x-apikey: cc4f0dd6e11be4c49f27c7947fc6536b05873a1d2f0b92f8d7075167072847cf']


def main():    

    # 2> extract the similar file hash
    similar_json = [f for f in listdir("similar-malware-dir") if isfile(join("similar-malware-dir", f))]

    similar_malware_sha = set()

    for file in similar_json:
        with open("similar-malware-dir/"+file, "r") as read_file:
            try:
                data = json.load(read_file)
                try:
                    for similar_mal in data["data"]:
                        similar_malware_sha.add(similar_mal["id"])
                except KeyError:
                    print("Error reading json:"+"similar-malware-dir/"+file+"\n")
            except json.decoder.JSONDecodeError:
                print("Error reading json:"+"similar-malware-dir/"+file+"\n")

    # 3> match the hash with all existing hashes
    new_malware_sha = set()

    for mal in similar_malware_sha:
        new_malware_sha.add(mal)

    print("New Malware len:", len(new_malware_sha), new_malware_sha)

    mal_downloaded = 0
    # 4> download the extra malwares
    for i, sha in enumerate(new_malware_sha):
        if mal_downloaded < 870:
            print('fileless-malware ', i,"/", len(new_malware_sha)," ", sha, 'downloaded: ', mal_downloaded)

            if not isfile('new-similar-malwares/' + sha + '.bin'):

                mal_downloaded = mal_downloaded + 1
                
                # save the new mal
                with open('malware-list/new_mal_' + str(datetime.today().strftime('%Y-%m-%d')) + '.txt', "a") as f:
                    f.write(sha + "\n")
                    f.close()

                with open('new-similar-malwares/' + sha + '.bin', 'wb') as f:
                    c = pycurl.Curl()
                    c.setopt(c.URL, base_url + key_str + kunal_key + hash_str + sha)
                    c.setopt(c.WRITEDATA, f)
                    # c.setopt(pycurl.VERBOSE, 1)
                    c.setopt(pycurl.FOLLOWLOCATION, 1)
                    c.perform()
                    c.close()
                time.sleep(15)
            else:
                print(sha+ " already downloaded - skipping")

if __name__ == '__main__':
    main()
