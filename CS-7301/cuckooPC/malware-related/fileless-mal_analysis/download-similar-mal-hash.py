# Name: Kunal Mukherjee
# Personal email: kunmukh@GMAIL.COM
# Date: 12/20/20
# File name: 
# Project name: splitbrain

# import
import datetime
from datetime import datetime
import time
import pycurl
import json
from os import listdir
from os.path import isfile, join
import subprocess
import os

# download malware command
# base commands
'''
curl -v --location --output sample.bin \
  --url 'https://www.virustotal.com/vtapi/v2/file/download?apikey=&hash=fdc9110458d2d88900171f8fb51b84254fed821a23f268eac73d3cdda38ed9d6
'''

# string constants for malware download
base_url = 'https://www.virustotal.com/vtapi/v2/file/download?'
key_str = 'apikey='
kunal_key = ''
hash_str = '&hash='

# downlaod similar file command
# base commands
'''
    curl --request GET \
  --url https://www.virustotal.com/api/v3/files/9990527d78700a55d788bd4b3fcbb16b3852027ea722540a00d43544df378053/similar_files \
  --header 'x-apikey: ' | json_pp > sample.json
'''

# string constants for similar malware json download
base_url_simi = 'https://www.virustotal.com/api/v3/files/'
similar_str = '/similar_files'
similar_header = ['x-apikey: ']

# malware array name
other_shaArr = []

# function to get all the SHA values
malware_file = ["fileless-malware-list/"+f for f in listdir("fileless-malware-list")
                if isfile(join("fileless-malware-list/", f)) and f != '.DS_Store']

#selected_mal = ['temp-files/noto-fileless-malware-hash_'+datetime.today().strftime('%Y-%m-%d')+'.txt']

# added extra
selected_mal = ['new-similar-fileless-malwares/malware-list.txt']
os.system("rm new-similar-fileless-malwares/malware-list.txt")
os.system("ls new-similar-fileless-malwares > new-similar-fileless-malwares/malware-list.txt")

# get all the SHA from the file
def getSHAfromFile():

    print(malware_file)

    for file in malware_file:
        f = open(file, "r")

        for x in f:
            x = x.strip('\n')

            # print(x, len(x))
            other_shaArr.append(x)

    print('Total # of malwares: ', len(other_shaArr))
    print('Other: ', len(other_shaArr))


def main():

    malware_downloaded = 0
    json_downloaded = 0

    getSHAfromFile()

    # read the selected malware
    for file in selected_mal:
        sel_mal_shaArr = set()

        with open(file, 'r') as f:
            for line in f:
                # added extra
                line = line.replace(".bin", "")
                line = line.strip('\n')
                sel_mal_shaArr.add(line)
            f.close()

        print('selected malware: ', sel_mal_shaArr)

        # download the selected malware
        for i, sha in enumerate(sel_mal_shaArr):
            print('selected-malware {}/{} {}'.format(i, len(sel_mal_shaArr), sha))

            if not isfile('similar-fileless-malware-dir/' + sha + '_similar.json'):

                json_downloaded = json_downloaded + 1

                # 1000 malwares downloaded time to break
                if malware_downloaded + json_downloaded > 998:
                    exit()

                # download the similar malware json
                with open('similar-fileless-malware-dir/' + sha + '_similar.json', 'wb') as f:
                    c = pycurl.Curl()
                    c.setopt(c.URL, base_url_simi+sha+similar_str)
                    c.setopt(c.HTTPHEADER, similar_header)
                    c.setopt(c.WRITEDATA, f)
                    # c.setopt(pycurl.VERBOSE, 1)
                    c.setopt(pycurl.FOLLOWLOCATION, 1)
                    c.perform()
                    c.close()
                time.sleep(15)

                # load the data from the file
                with open('similar-fileless-malware-dir/' + sha + '_similar.json', 'r') as f:
                    data = json.load(f)

                try:
                    similar_malwares = [m["id"] for m in data["data"]]

                    for similar_mal in similar_malwares:

                        if not isfile('new-similar-fileless-malwares/' + similar_mal + '.bin'):

                            malware_downloaded = malware_downloaded + 1

                            # 1000 malwares downloaded time to break
                            if malware_downloaded + json_downloaded > 998:
                                exit()

                            # save the new mal
                            with open('fileless-malware-list/new_fileless_mal_' + str(datetime.today().strftime('%Y-%m-%d')) + '.txt', "a") as f:
                                f.write(similar_mal + "\n")
                                f.close()

                            with open('new-similar-fileless-malwares/' + similar_mal + '.bin', 'wb') as f:
                                c = pycurl.Curl()
                                c.setopt(c.URL, base_url + key_str + kunal_key + hash_str + similar_mal)
                                c.setopt(c.WRITEDATA, f)
                                # c.setopt(pycurl.VERBOSE, 1)
                                c.setopt(pycurl.FOLLOWLOCATION, 1)
                                c.perform()
                                c.close()
                            time.sleep(15)

                            print("{} malware downloaded".format(malware_downloaded))

                        else:
                            print(similar_mal + " already downloaded - skipping")

                except KeyError:
                    print("Error reading json:"+"similar-malware-fileless-dir/"+file+"\n")

                    if data["error"]["code"] == "QuotaExceededError":
                        print("VT Quota exceeded")
                        exit()
                except json.decoder.JSONDecodeError:
                    print("Error reading json:"+"similar-malware-fileless-dir/"+file+"\n")

            else:
                print(sha + "_similar.json already downloaded - skipping")


if __name__ == '__main__':
    main()
