-- 1>Create the Person Table
CREATE TABLE PERSON
(
    PID CHAR(4) NOT NULL,
    DOB DATE NOT NULL,
    Fname VARCHAR(15) NOT NULL,
    Mname CHAR DEFAULT NULL,
    Lname VARCHAR(15) NOT NULL,
    Gender VARCHAR(15) NOT NULL DEFAULT 'Unknown',
    CONSTRAINT PER_PPK
        PRIMARY KEY(PID),
    CONSTRAINT CHK_Age
        CHECK (YEAR(GETDATE()) - YEAR(DOB) > 16),
    CONSTRAINT CHK_GNDR
        CHECK(Gender in ('Male', 'Female', 'Unknown')),
    CONSTRAINT CHK_PID
        CHECK (PID LIKE 'P[0-9][0-9][0-9]')
);
GO

-- 2>Create the Phone Number Table
CREATE TABLE PHONE_NUMBER
(
    PID CHAR(4) NOT NULL,
    PhoneNo CHAR(10) NOT NULL,
    CONSTRAINT PHO_PPK
        PRIMARY KEY(PID, PhoneNo),
    CONSTRAINT PHO_FRK
        FOREIGN KEY (PID) REFERENCES PERSON(PID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_PhoneNo
        CHECK (PhoneNo LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
);
GO

-- 3>Create the Address Table
CREATE TABLE PRSN_ADDRESS
(
    PID CHAR(4) NOT NULL,
    AdState CHAR(2) NOT NULL,
    AdCity VARCHAR(15) NOT NULL,
    AdStreet VARCHAR(15) NOT NULL,
    CONSTRAINT ADDR_PPK
        PRIMARY KEY(PID, AdState, AdCity, AdStreet),
    CONSTRAINT ADDR_FRK
        FOREIGN KEY (PID) REFERENCES PERSON(PID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 4>Create the Silver Customer Table
CREATE TABLE SILVER_CUST
(
    SilverPID CHAR(4) NOT NULL,
    DateOfJoin DATE NOT NULL,
    CONSTRAINT SILVER_CUST_PPK
        PRIMARY KEY(SilverPID),
    CONSTRAINT SILVER_CUST_FRK
        FOREIGN KEY (SilverPID) REFERENCES PERSON(PID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 5>Create the Onile Customer Table
CREATE TABLE ONLINE_CUST
(
    OnlinePID CHAR(4) NOT NULL,
    Email VARCHAR(15) NOT NULL,
    CONSTRAINT ONLINE_CUST_PPK
        PRIMARY KEY(OnlinePID),
    CONSTRAINT ONLINE_CUST_FRK
        FOREIGN KEY (OnlinePID) REFERENCES SILVER_CUST(SilverPID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 6>Create the Store Table
CREATE TABLE STORE
(
    StoreID INT NOT NULL,
    StoreName VARCHAR(10) NOT NULL,
    StoreState CHAR(2) NOT NULL,
    StoreCity VARCHAR(15) NOT NULL,
    StoreStreet VARCHAR(15) NOT NULL,
    CONSTRAINT STORE_PPK
        PRIMARY KEY(StoreID)
);
GO

-- 7>Create the StoreContact Table
CREATE TABLE STORE_CONTACT
(
    StoreID INT NOT NULL,
    StorePhoneNo CHAR(10) NOT NULL,
    CONSTRAINT STORE_CONTACT_PPK
        PRIMARY KEY(StoreID),
    CONSTRAINT STORE_CONTACT_FRK
        FOREIGN KEY (StoreID) REFERENCES STORE(StoreID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT StorePhoneNo
        CHECK (StorePhoneNo LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
);
GO

-- 8>Create the Sale Table
CREATE TABLE SALE
(
    SaleNum INT NOT NULL,
    StoreID INT NOT NULL,
    SaleID CHAR(10) NOT NULL,
    SaleDescription CHAR(15) NOT NULL,
    Duration DATETIME NOT NULL,
    CONSTRAINT SALE_PPK
        PRIMARY KEY(SaleNum, StoreID),
    CONSTRAINT SALE_FRK
        FOREIGN KEY (StoreID) REFERENCES STORE(StoreID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
);
GO

-- 9>Create the Voucher Table
CREATE TABLE VOUCHER
(
    VoucherID INT NOT NULL,
    IssueStoreID INT NOT NULL,
    CONSTRAINT VOUCHER_PPK
        PRIMARY KEY(VoucherID, IssueStoreID),
    CONSTRAINT VOCUHER_FRK
        FOREIGN KEY (IssueStoreID) REFERENCES STORE_CONTACT(StoreID)
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 10>Create the Promotion Table
CREATE TABLE PROMOTION
(
    PromotionNum INT NOT NULL,
    VoucherID INT NOT NULL,
    IssueStoreID INT NOT NULL,
    PromotionID INT NOT NULL,
    PromotionDetail VARCHAR(30) NOT NULL,
    CONSTRAINT PROMOTION_PPK
        PRIMARY KEY (PromotionNum, VoucherID, IssueStoreID),
    CONSTRAINT PROMOTION_FRK
        FOREIGN KEY (VoucherID, IssueStoreID) REFERENCES VOUCHER(VoucherID, IssueStoreID)
        ON DELETE CASCADE ON UPDATE CASCADE    
);
GO

-- 11>Create the Gold Customer Table
CREATE TABLE GOLD_CUST
(
    GoldPID CHAR(4) NOT NULL,
    CardStoreID INT NOT NULL,
    CardUniqID INT NOT NULL UNIQUE,
    CardInfo VARCHAR(15),
    CardIssueDate DATE NOT NULL,
    CardExpiraryDate DATE NOT NULL,
    CONSTRAINT GOLD_CUST_PPK
        PRIMARY KEY(GoldPID, CardStoreID, CardUniqID),
    CONSTRAINT SILVER_CUST_FRK1
        FOREIGN KEY (GoldPID) REFERENCES PERSON(PID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT GOLD_CUST_FRK2
        FOREIGN KEY (CardStoreID) REFERENCES STORE(StoreID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_DATE
        CHECK( CardIssueDate < CardExpiraryDate)
);
GO

-- 12>Create the Non-Online Customer Table
CREATE TABLE NON_ONLINE_CUST
(
    NonOnlinePID CHAR(4) NOT NULL,
    GoldPID CHAR(4),
    CardStoreID INT,
    CardUniqID INT,
    CONSTRAINT NON_ONLINE_CUST_PPK
        PRIMARY KEY(NonOnlinePID),
    CONSTRAINT NON_ONLINE_CUST_FRK1
        FOREIGN KEY (NonOnlinePID) REFERENCES SILVER_CUST(SilverPID) 
       ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT NON_ONLINE_CUST_FRK2
        FOREIGN KEY (GoldPID, CardStoreID, CardUniqID) REFERENCES GOLD_CUST(GoldPID, CardStoreID, CardUniqID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT CHK_NON_ONLINE_CUST_PID
        CHECK (NonOnlinePID = GoldPID)
);
GO

-- 13>Create the Employee Table
CREATE TABLE EMPLOYEE
(
    EmployeePID CHAR(4) NOT NULL,
    CurrStartDate DATE NOT NULL,
    CurrDesignation VARCHAR(15) NOT NULL,
    GoldPID CHAR(4),
    CardStoreID INT,
    CardUniqID INT,
    CONSTRAINT EMPLOYEE_PPK
        PRIMARY KEY(EmployeePID),
    CONSTRAINT EMPLOYEE_FRK1
        FOREIGN KEY (EmployeePID) REFERENCES PERSON (PID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT EMPLOYEE_FRK2
        FOREIGN KEY (GoldPID, CardStoreID, CardUniqID) REFERENCES GOLD_CUST(GoldPID, CardStoreID, CardUniqID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT CHK_EMPLOYEE_PID
        CHECK (EmployeePID = GoldPID),
    CONSTRAINT CHK_EMPLOYEE_DESIGN
        CHECK (CurrDesignation In ('Cashier', 'Manager', 'FloorStaff')) 
);
GO

-- 14>Create the Pay Table
CREATE TABLE PAY
(
    EmployeePID CHAR(4) NOT NULL,
    WorkHour INT NOT NULL,
    PayDate DATE NOT NULL,
    CONSTRAINT PAY_PPK
        PRIMARY KEY(EmployeePID, WorkHour, PayDate),
    CONSTRAINT PAY_FRK
        FOREIGN KEY (EmployeePID) REFERENCES EMPLOYEE (EmployeePID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
);
GO

-- 15>Create the Past Designation Table
CREATE TABLE PAST_DESIGNATION
(
    EmployeePID CHAR(4) NOT NULL,
    StartDate DATE NOT NULL,
    Designation VARCHAR(15) NOT NULL,
    CONSTRAINT PAST_DESIGNATION_PPK
        PRIMARY KEY(EmployeePID, StartDate, Designation),
    CONSTRAINT PAST_DESIGNATION_FRK
        FOREIGN KEY (EmployeePID) REFERENCES EMPLOYEE (EmployeePID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 16>Create the Cashier Table
CREATE TABLE CASHIER
(
    CashierPID CHAR(4) NOT NULL,
    CONSTRAINT CASHIER_PPK
        PRIMARY KEY(CashierPID),
    CONSTRAINT CASHIER_FRK
        FOREIGN KEY (CashierPID) REFERENCES EMPLOYEE (EmployeePID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO
-- 17>Create the Manager Table
CREATE TABLE MANAGER
(
    ManagerPID CHAR(4) NOT NULL,
    CONSTRAINT MANAGER_PPK
        PRIMARY KEY(ManagerPID),
    CONSTRAINT MANAGER_FRK
        FOREIGN KEY (ManagerPID) REFERENCES EMPLOYEE (EmployeePID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO
-- 18>Create the Floor Staff Table
CREATE TABLE FLOOR_STAFF
(
    FloorStaffPID CHAR(4) NOT NULL,
    CONSTRAINT FLOOR_STAFF_PPK
        PRIMARY KEY(FloorStaffPID),
    CONSTRAINT FLOOR_STAFF_FRK
        FOREIGN KEY (FloorStaffPID) REFERENCES EMPLOYEE (EmployeePID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 19>Create the Aisle Table
CREATE TABLE AISLE
(
    AisleID INT NOT NULL,
    CONSTRAINT AISLE_PPK
        PRIMARY KEY(AisleID)
);
GO

-- 20>Create the Aisle Infor Table
CREATE TABLE AISLE_INFO
(
    AisleID INT NOT NULL,
    AisleNumber INT NOT NULL,
    Section INT NOT NULL,
    CONSTRAINT AISLE_INFO_PPK
        PRIMARY KEY(AisleID, AisleNumber, Section),
    CONSTRAINT AISLE_INFO_FRK
        FOREIGN KEY (AisleID) REFERENCES AISLE (AisleID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 21>Create the Supplier Table
CREATE TABLE SUPPLIER
(
    SupplierID INT NOT NULL,
    SupplierName VARCHAR(30) NOT NULL,
    SupplierLocation VARCHAR(30) NOT NULL,
    SupplierPhoneNo CHAR(10) NOT NULL,
    CONSTRAINT SUPPLIER_PPK
        PRIMARY KEY(SupplierID),
     CONSTRAINT CHK_SUPPLIER_PhoneNo
        CHECK (SupplierPhoneNo LIKE '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')
);
GO

-- 22>Create the Product Table
CREATE TABLE PRODUCT
(
    ProductID INT NOT NULL,
    ProductQuantity INT NOT NULL,
    ProductDescription VARCHAR(30) NOT NULL,
    ProductAgeRestriction VARCHAR(3),
    ProductSupplierID INT NOT NULL,
    CONSTRAINT PRODUCT_PPK
        PRIMARY KEY(ProductID),
    CONSTRAINT PRODUCT_FRK
        FOREIGN KEY (ProductSupplierID) REFERENCES SUPPLIER (SupplierID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT CHK_AGE_RES
        CHECK(ProductAgeRestriction in ('Yes', 'No', 'Unknown')),
);
GO

-- 23>Create the Perishables Table
CREATE TABLE PERI_PRODUCT
(
    PerishableProductID INT NOT NULL,
    ExpiraryDate DATE NOT NULL,
    CONSTRAINT PERI_PRODUCT_PPK
        PRIMARY KEY(PerishableProductID),
    CONSTRAINT PERI_PRODUCT_FRK
        FOREIGN KEY (PerishableProductID) REFERENCES PRODUCT (ProductID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 24>Create the Non-Perishables Table
CREATE TABLE NON_PERI_PRODUCT
(
    NonPerishableProductID INT NOT NULL,
    CONSTRAINT NON_PERI_PRODUCT_PPK
        PRIMARY KEY(NonPerishableProductID),
    CONSTRAINT NON_PERI_PRODUCT_FRK
        FOREIGN KEY (NonPerishableProductID) REFERENCES PRODUCT (ProductID) 
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 25>Create the Suply Date 
CREATE TABLE SUPPLY_DATE
(
    ProductID INT NOT NULL,
    SupplierID INT NOT NULL,
    SupplyDate DATE NOT NULL,
    CONSTRAINT SUPPLY_DATE_PPK
        PRIMARY KEY(ProductID, SupplierID, SupplyDate),
    CONSTRAINT SUPPLY_DATE_FRK1
        FOREIGN KEY (ProductID) REFERENCES PRODUCT (ProductID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT SUPPLY_DATE_FRK2
        FOREIGN KEY (SupplierID) REFERENCES SUPPLIER (SupplierID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
);
GO

-- 26>Create the Arrangement Table
CREATE TABLE ARRANGEMENT
(
    ProductID INT NOT NULL,
    FloorStaffPID CHAR(4) NOT NULL,
    AisleID INT NOT NULL,
    ArrangementDate DATE NOT NULL,
    CONSTRAINT ARRANGEMENT_PPK
        PRIMARY KEY(ProductID, FloorStaffPID, AisleID),
    CONSTRAINT ARRANGEMENT_FRK1
        FOREIGN KEY (ProductID) REFERENCES PRODUCT (ProductID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ARRANGEMENT_FRK2
        FOREIGN KEY (FloorStaffPID) REFERENCES FLOOR_STAFF (FloorStaffPID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ARRANGEMENT_FRK3
        FOREIGN KEY (AisleID) REFERENCES AISLE (AisleID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
);
GO

-- 27>Create the Buy Table
CREATE TABLE BUY
(
    NonOnlinePID CHAR(4) NOT NULL,
    VoucherID INT NOT NULL,
    VoucherIssueStoreID INT NOT NULL,
    DatePurchase DATE NOT NULL
    CONSTRAINT BUY_PPK
        PRIMARY KEY(NonOnlinePID, VoucherID, VoucherIssueStoreID),
    CONSTRAINT BUY_FRK1
        FOREIGN KEY (NonOnlinePID) REFERENCES NON_ONLINE_CUST (NonOnlinePID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT BUY_FRK2
        FOREIGN KEY (VoucherID, VoucherIssueStoreID) REFERENCES VOUCHER (VoucherID, IssueStoreID)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);
GO

-- 28>Create the Assignment Table
CREATE TABLE ASSIGNMENT
(
    EmployeePID CHAR(4) NOT NULL,
    AisleID INT NOT NULL,
    StoreID INT NOT NULL,
    AssignmentDate DATE NOT NULL,    
    CONSTRAINT ASSIGNMENT_PPK
        PRIMARY KEY(EmployeePID, AisleID, StoreID),
    CONSTRAINT ASSIGNMENT_FRK1
        FOREIGN KEY (EmployeePID) REFERENCES EMPLOYEE (EmployeePID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ASSIGNMENT_FRK2
        FOREIGN KEY (AisleID) REFERENCES AISLE (AisleID)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ASSIGNMENT_FRK3
        FOREIGN KEY (StoreID) REFERENCES STORE (StoreID)
        ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 29>Create the Given Free Table
CREATE TABLE GIVEN_FREE
(
    GoldPID CHAR(4) NOT NULL,
    CardStoreID INT NOT NULL,
    CardUniqID INT NOT NULL,
    VoucherID INT NOT NULL,
    VoucherIssueStoreID INT NOT NULL,
    CONSTRAINT GIVEN_FREE_PPK
        PRIMARY KEY(GoldPID, CardStoreID, CardUniqID, VoucherID, VoucherIssueStoreID),
    CONSTRAINT GIVEN_FREE_FRK1
        FOREIGN KEY (GoldPID, CardStoreID, CardUniqID) REFERENCES GOLD_CUST(GoldPID, CardStoreID, CardUniqID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT GIVEN_FREE_FRK2
        FOREIGN KEY (VoucherID, VoucherIssueStoreID) REFERENCES VOUCHER (VoucherID, IssueStoreID)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);
GO

-- 30>Create the Works Table
CREATE TABLE WORKS
(
    EmployeePID CHAR(4) NOT NULL,
    StoreID INT NOT NULL,
    CONSTRAINT WORKS_PPK
        PRIMARY KEY(EmployeePID, StoreID),
    CONSTRAINT WORKS_FRK1
        FOREIGN KEY (EmployeePID) REFERENCES EMPLOYEE (EmployeePID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT WORKS_FRK2
        FOREIGN KEY (StoreID) REFERENCES STORE (StoreID)
        ON DELETE NO ACTION ON UPDATE NO ACTION
);
GO

-- 31>Create the Online Order Table
CREATE TABLE ONLINE_ORDER
(
    OnlinePID CHAR(4) NOT NULL,
    ProductID INT NOT NULL,
    OnlineBillID INT NOT NULL UNIQUE,
    BillAmount INT NOT NULL,
    DatePurchase DATE NOT NULL,
    PaymentMethod VARCHAR(10) NOT NULL,
    CONSTRAINT ONLINE_ORDER_PPK
        PRIMARY KEY(OnlinePID, ProductID, OnlineBillID),
    CONSTRAINT ONLINE_ORDER_FRK1
        FOREIGN KEY (OnlinePID) REFERENCES ONLINE_CUST (OnlinePID) 
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT ONLINE_ORDER_FRK2
        FOREIGN KEY (ProductID) REFERENCES PRODUCT (ProductID) 
        ON DELETE CASCADE ON UPDATE CASCADE,

);
GO

-- 32>Create the Store Order Table
CREATE TABLE STORE_ORDER
(
    CashierPID CHAR(4) NOT NULL,
    StoreID INT NOT NULL,
    ProductID INT NOT NULL,
    PID CHAR(4) NOT NULL,
    StoreBillId INT NOT NULL UNIQUE,
    BillAmount INT NOT NULL,
    DatePurchase DATE NOT NULL,
    PaymentMethod VARCHAR(10) NOT NULL,
    CONSTRAINT STORE_ORDER_PPK
        PRIMARY KEY(CashierPID, StoreID, ProductID, PID, StoreBillId),
    CONSTRAINT STORE_ORDER_FRK1
        FOREIGN KEY (CashierPID) REFERENCES CASHIER (CashierPID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT STORE_ORDER_FRK2
        FOREIGN KEY (StoreID) REFERENCES STORE_CONTACT (StoreID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT STORE_ORDER_FRK3
        FOREIGN KEY(ProductID) REFERENCES PRODUCT (ProductID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION,
    CONSTRAINT STORE_ORDER_FRK4
        FOREIGN KEY (PID) REFERENCES PERSON (PID) 
        ON DELETE NO ACTION ON UPDATE NO ACTION
);
GO